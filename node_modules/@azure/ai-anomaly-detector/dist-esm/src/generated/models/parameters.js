/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { DetectRequest as DetectRequestMapper, DetectChangePointRequest as DetectChangePointRequestMapper, ModelInfo as ModelInfoMapper, DetectionRequest as DetectionRequestMapper, LastDetectionRequest as LastDetectionRequestMapper } from "../models/mappers";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: DetectRequestMapper
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "Endpoint",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "v1.1-preview.1",
        isConstant: true,
        serializedName: "ApiVersion",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const body1 = {
    parameterPath: "body",
    mapper: DetectChangePointRequestMapper
};
export const body2 = {
    parameterPath: "body",
    mapper: ModelInfoMapper
};
export const skip = {
    parameterPath: ["options", "skip"],
    mapper: {
        serializedName: "$skip",
        type: {
            name: "Number"
        }
    }
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        defaultValue: 5,
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export const modelId = {
    parameterPath: "modelId",
    mapper: {
        serializedName: "modelId",
        required: true,
        type: {
            name: "Uuid"
        }
    }
};
export const body3 = {
    parameterPath: "body",
    mapper: DetectionRequestMapper
};
export const resultId = {
    parameterPath: "resultId",
    mapper: {
        serializedName: "resultId",
        required: true,
        type: {
            name: "Uuid"
        }
    }
};
export const accept1 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/zip, application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const body4 = {
    parameterPath: "body",
    mapper: LastDetectionRequestMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
//# sourceMappingURL=parameters.js.map
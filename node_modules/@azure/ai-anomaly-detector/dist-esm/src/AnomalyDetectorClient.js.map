{"version":3,"file":"AnomalyDetectorClient.js","sourceRoot":"","sources":["../../src/AnomalyDetectorClient.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AAElC,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAE9C,OAAO,EACL,WAAW,EACX,uBAAuB,EACvB,wCAAwC,EACxC,4CAA4C,GAC7C,MAAM,aAAa,CAAC;AACrB,OAAO,EACL,iBAAiB,EACjB,+BAA+B,EAE/B,yBAAyB,GAE1B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,6CAA6C,EAAE,MAAM,4BAA4B,CAAC;AAC3F,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC;;GAEG;AACH,MAAM,OAAO,qBAAsB,SAAQ,eAAe;IACxD;;;;;;;;;;;;;;;OAeG;IACH,YACE,WAAmB,EACnB,UAA2C;IAC3C,iEAAiE;IACjE,OAAyB;QAEzB,MAAW,eAAe,UAAK,OAAO,EAAhC,EAAsB,CAAU,CAAC;QAEvC,MAAM,OAAO,GAAG,+BAA+B,WAAW,EAAE,CAAC;QAC7D,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;YACrC,eAAe,CAAC,gBAAgB,GAAG,EAAE,CAAC;SACvC;QACD,IAAI,eAAe,CAAC,gBAAgB,CAAC,eAAe,EAAE;YACpD,eAAe,CAAC,gBAAgB,CAAC,eAAe,GAAG,GAAG,eAAe,CAAC,gBAAgB,CAAC,eAAe,IAAI,OAAO,EAAE,CAAC;SACrH;aAAM;YACL,eAAe,CAAC,gBAAgB,CAAC,eAAe,GAAG,OAAO,CAAC;SAC5D;QAED,MAAM,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC;YAC9C,CAAC,CAAC,+BAA+B,CAAC,UAAU,EAAE,uBAAuB,CAAC;YACtE,CAAC,CAAC,6CAA6C,CAAC,UAAU,CAAC,CAAC;QAE9D,MAAM,uBAAuB,mCACxB,eAAe,GACf;YACD,cAAc,EAAE;gBACd,MAAM,EAAE,MAAM,CAAC,IAAI;gBACnB,kBAAkB,EAAE,wCAAwC;gBAC5D,sBAAsB,EAAE,4CAA4C;aACrE;SACF,CACF,CAAC;QAEF,MAAM,QAAQ,GAAG,yBAAyB,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC;QAEhF,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC/B,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AnomalyDetector } from \"./generated\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  SDK_VERSION,\n  DEFAULT_COGNITIVE_SCOPE,\n  AnomalyDetectorLoggingAllowedHeaderNames,\n  AnomalyDetectorLoggingAllowedQueryParameters,\n} from \"./constants\";\nimport {\n  isTokenCredential,\n  bearerTokenAuthenticationPolicy,\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  PipelineOptions,\n} from \"@azure/core-http\";\nimport { createAnomalyDetectorAzureKeyCredentialPolicy } from \"./azureKeyCredentialPolicy\";\nimport { logger } from \"./logger\";\n\n/**\n * Client class for interacting with Azure Anomaly Detector service.\n */\nexport class AnomalyDetectorClient extends AnomalyDetector {\n  /**\n   * Creates an instance of AnomalyDetectorClient.\n   *\n   * Example usage:\n   * ```ts\n   * import { AnomalyDetectorClient, AzureKeyCredential } from \"@azure/ai-anomaly-detector\";\n   *\n   * const client = new AnomalyDetectorClient(\n   *    \"<service endpoint>\",\n   *    new AzureKeyCredential(\"<api key>\")\n   * );\n   * ```\n   * @param endpointUrl - Url to an Azure Anomaly Detector service endpoint\n   * @param credential - Used to authenticate requests to the service.\n   * @param options - Used to configure the Form Recognizer client.\n   */\n  constructor(\n    endpointUrl: string,\n    credential: TokenCredential | KeyCredential,\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: PipelineOptions\n  ) {\n    const { ...pipelineOptions } = options;\n\n    const libInfo = `azsdk-js-ai-anomalydetector/${SDK_VERSION}`;\n    if (!pipelineOptions.userAgentOptions) {\n      pipelineOptions.userAgentOptions = {};\n    }\n    if (pipelineOptions.userAgentOptions.userAgentPrefix) {\n      pipelineOptions.userAgentOptions.userAgentPrefix = `${pipelineOptions.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      pipelineOptions.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const authPolicy = isTokenCredential(credential)\n      ? bearerTokenAuthenticationPolicy(credential, DEFAULT_COGNITIVE_SCOPE)\n      : createAnomalyDetectorAzureKeyCredentialPolicy(credential);\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...pipelineOptions,\n      ...{\n        loggingOptions: {\n          logger: logger.info,\n          allowedHeaderNames: AnomalyDetectorLoggingAllowedHeaderNames,\n          allowedQueryParameters: AnomalyDetectorLoggingAllowedQueryParameters,\n        },\n      },\n    };\n\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n\n    super(endpointUrl, pipeline);\n  }\n}\n"]}
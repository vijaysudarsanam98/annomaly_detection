{"version":3,"file":"index.js","sources":["../src/generated/tracing.ts","../src/generated/models/mappers.ts","../src/generated/models/parameters.ts","../src/generated/anomalyDetectorContext.ts","../src/generated/anomalyDetector.ts","../src/constants.ts","../src/azureKeyCredentialPolicy.ts","../src/logger.ts","../src/AnomalyDetectorClient.ts","../src/models.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\nexport const createSpan = createSpanFunction({\n  namespace: \"Microsoft.CognitiveServices\",\n  packagePrefix: \"Azure.CognitiveServices.AnomalyDetector\"\n});\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const DetectRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectRequest\",\n    modelProperties: {\n      series: {\n        serializedName: \"series\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TimeSeriesPoint\"\n            }\n          }\n        }\n      },\n      granularity: {\n        serializedName: \"granularity\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"yearly\",\n            \"monthly\",\n            \"weekly\",\n            \"daily\",\n            \"hourly\",\n            \"minutely\",\n            \"secondly\",\n            \"microsecond\",\n            \"none\"\n          ]\n        }\n      },\n      customInterval: {\n        serializedName: \"customInterval\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      period: {\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxAnomalyRatio: {\n        serializedName: \"maxAnomalyRatio\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sensitivity: {\n        serializedName: \"sensitivity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      imputeMode: {\n        serializedName: \"imputeMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imputeFixedValue: {\n        serializedName: \"imputeFixedValue\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TimeSeriesPoint: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TimeSeriesPoint\",\n    modelProperties: {\n      timestamp: {\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectEntireResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectEntireResponse\",\n    modelProperties: {\n      period: {\n        serializedName: \"period\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      expectedValues: {\n        serializedName: \"expectedValues\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      upperMargins: {\n        serializedName: \"upperMargins\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      lowerMargins: {\n        serializedName: \"lowerMargins\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      isAnomaly: {\n        serializedName: \"isAnomaly\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      isNegativeAnomaly: {\n        serializedName: \"isNegativeAnomaly\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      isPositiveAnomaly: {\n        serializedName: \"isPositiveAnomaly\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorError: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectLastPointResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectLastPointResponse\",\n    modelProperties: {\n      period: {\n        serializedName: \"period\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      suggestedWindow: {\n        serializedName: \"suggestedWindow\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      expectedValue: {\n        serializedName: \"expectedValue\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      upperMargin: {\n        serializedName: \"upperMargin\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lowerMargin: {\n        serializedName: \"lowerMargin\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isAnomaly: {\n        serializedName: \"isAnomaly\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isNegativeAnomaly: {\n        serializedName: \"isNegativeAnomaly\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isPositiveAnomaly: {\n        serializedName: \"isPositiveAnomaly\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectChangePointRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectChangePointRequest\",\n    modelProperties: {\n      series: {\n        serializedName: \"series\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TimeSeriesPoint\"\n            }\n          }\n        }\n      },\n      granularity: {\n        serializedName: \"granularity\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"yearly\",\n            \"monthly\",\n            \"weekly\",\n            \"daily\",\n            \"hourly\",\n            \"minutely\",\n            \"secondly\",\n            \"microsecond\",\n            \"none\"\n          ]\n        }\n      },\n      customInterval: {\n        serializedName: \"customInterval\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      period: {\n        serializedName: \"period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      stableTrendWindow: {\n        serializedName: \"stableTrendWindow\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      threshold: {\n        serializedName: \"threshold\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectChangePointResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectChangePointResponse\",\n    modelProperties: {\n      period: {\n        serializedName: \"period\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isChangePoint: {\n        serializedName: \"isChangePoint\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Boolean\"\n            }\n          }\n        }\n      },\n      confidenceScores: {\n        serializedName: \"confidenceScores\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ModelInfo: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelInfo\",\n    modelProperties: {\n      slidingWindow: {\n        serializedName: \"slidingWindow\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      alignPolicy: {\n        serializedName: \"alignPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AlignPolicy\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      displayName: {\n        constraints: {\n          MaxLength: 24\n        },\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"CREATED\", \"RUNNING\", \"READY\", \"FAILED\"]\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      diagnosticsInfo: {\n        serializedName: \"diagnosticsInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlignPolicy: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AlignPolicy\",\n    modelProperties: {\n      alignMode: {\n        serializedName: \"alignMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Inner\", \"Outer\"]\n        }\n      },\n      fillNAMethod: {\n        serializedName: \"fillNAMethod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      paddingValue: {\n        serializedName: \"paddingValue\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnosticsInfo: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnosticsInfo\",\n    modelProperties: {\n      modelState: {\n        serializedName: \"modelState\",\n        type: {\n          name: \"Composite\",\n          className: \"ModelState\"\n        }\n      },\n      variableStates: {\n        serializedName: \"variableStates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VariableState\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ModelState: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelState\",\n    modelProperties: {\n      epochIds: {\n        serializedName: \"epochIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      trainLosses: {\n        serializedName: \"trainLosses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      validationLosses: {\n        serializedName: \"validationLosses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      latenciesInSeconds: {\n        serializedName: \"latenciesInSeconds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VariableState: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VariableState\",\n    modelProperties: {\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filledNARatio: {\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"filledNARatio\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      effectiveCount: {\n        serializedName: \"effectiveCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModelList: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelList\",\n    modelProperties: {\n      models: {\n        serializedName: \"models\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ModelSnapshot\"\n            }\n          }\n        }\n      },\n      currentCount: {\n        serializedName: \"currentCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxCount: {\n        serializedName: \"maxCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModelSnapshot: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModelSnapshot\",\n    modelProperties: {\n      modelId: {\n        serializedName: \"modelId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      createdTime: {\n        serializedName: \"createdTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdatedTime: {\n        serializedName: \"lastUpdatedTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        required: true,\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"CREATED\", \"RUNNING\", \"READY\", \"FAILED\"]\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      variablesCount: {\n        serializedName: \"variablesCount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Model: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Model\",\n    modelProperties: {\n      modelId: {\n        serializedName: \"modelId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      createdTime: {\n        serializedName: \"createdTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdatedTime: {\n        serializedName: \"lastUpdatedTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      modelInfo: {\n        serializedName: \"modelInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ModelInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectionRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectionRequest\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectionResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectionResult\",\n    modelProperties: {\n      resultId: {\n        serializedName: \"resultId\",\n        required: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      summary: {\n        serializedName: \"summary\",\n        type: {\n          name: \"Composite\",\n          className: \"DetectionResultSummary\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AnomalyState\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DetectionResultSummary: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DetectionResultSummary\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"CREATED\", \"RUNNING\", \"READY\", \"FAILED\"]\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      },\n      variableStates: {\n        serializedName: \"variableStates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VariableState\"\n            }\n          }\n        }\n      },\n      setupInfo: {\n        serializedName: \"setupInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"DetectionRequest\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyState: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyState\",\n    modelProperties: {\n      timestamp: {\n        serializedName: \"timestamp\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Composite\",\n          className: \"AnomalyValue\"\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyValue: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyValue\",\n    modelProperties: {\n      isAnomaly: {\n        serializedName: \"isAnomaly\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      severity: {\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"severity\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      score: {\n        constraints: {\n          InclusiveMaximum: 2,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"score\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      interpretation: {\n        serializedName: \"interpretation\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AnomalyInterpretation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyInterpretation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyInterpretation\",\n    modelProperties: {\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contributionScore: {\n        serializedName: \"contributionScore\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      correlationChanges: {\n        serializedName: \"correlationChanges\",\n        type: {\n          name: \"Composite\",\n          className: \"CorrelationChanges\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorrelationChanges: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CorrelationChanges\",\n    modelProperties: {\n      changedVariables: {\n        serializedName: \"changedVariables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      changedValues: {\n        serializedName: \"changedValues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LastDetectionRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LastDetectionRequest\",\n    modelProperties: {\n      variables: {\n        serializedName: \"variables\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VariableValues\"\n            }\n          }\n        }\n      },\n      detectingPoints: {\n        serializedName: \"detectingPoints\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const VariableValues: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VariableValues\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamps: {\n        serializedName: \"timestamps\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LastDetectionResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LastDetectionResult\",\n    modelProperties: {\n      variableStates: {\n        serializedName: \"variableStates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VariableState\"\n            }\n          }\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AnomalyState\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorDetectEntireSeriesExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorDetectEntireSeriesExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorDetectLastPointExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorDetectLastPointExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorDetectChangePointExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorDetectChangePointExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorTrainMultivariateModelHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorTrainMultivariateModelHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorTrainMultivariateModelExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorTrainMultivariateModelExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorListMultivariateModelExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorListMultivariateModelExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorGetMultivariateModelExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorGetMultivariateModelExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorDeleteMultivariateModelExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorDeleteMultivariateModelExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorDetectAnomalyHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorDetectAnomalyHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorDetectAnomalyExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorDetectAnomalyExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorGetDetectionResultExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorGetDetectionResultExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorExportModelExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorExportModelExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorLastDetectAnomalyExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorLastDetectAnomalyExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AnomalyDetectorListMultivariateModelNextExceptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AnomalyDetectorListMultivariateModelNextExceptionHeaders\",\n    modelProperties: {\n      xMsErrorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-http\";\nimport {\n  DetectRequest as DetectRequestMapper,\n  DetectChangePointRequest as DetectChangePointRequestMapper,\n  ModelInfo as ModelInfoMapper,\n  DetectionRequest as DetectionRequestMapper,\n  LastDetectionRequest as LastDetectionRequestMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DetectRequestMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"Endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationURLParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"v1.1-preview.1\",\n    isConstant: true,\n    serializedName: \"ApiVersion\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DetectChangePointRequestMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ModelInfoMapper\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"$skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    defaultValue: 5,\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const modelId: OperationURLParameter = {\n  parameterPath: \"modelId\",\n  mapper: {\n    serializedName: \"modelId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DetectionRequestMapper\n};\n\nexport const resultId: OperationURLParameter = {\n  parameterPath: \"resultId\",\n  mapper: {\n    serializedName: \"resultId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/zip, application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: LastDetectionRequestMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { AnomalyDetectorOptionalParams } from \"./models\";\n\nconst packageName = \"@azure/ai-form-recognizer\";\nconst packageVersion = \"3.0.0-beta.5\";\n\nexport class AnomalyDetectorContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the AnomalyDetectorContext class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   *                 https://westus2.api.cognitive.microsoft.com).\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: AnomalyDetectorOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    const defaultUserAgent = `azsdk-js-${packageName.replace(\n      \"@azure/\",\n      \"\"\n    )}/${packageVersion} ${coreHttp.getDefaultUserAgentValue()}`;\n\n    super(undefined, {\n      ...options,\n      userAgent: options.userAgent\n        ? `${options.userAgent} ${defaultUserAgent}`\n        : `${defaultUserAgent}`\n    });\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.baseUri =\n      options.endpoint || \"{Endpoint}/anomalydetector/{ApiVersion}\";\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"v1.1-preview.1\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport * as coreTracing from \"@azure/core-tracing\";\nimport { createSpan } from \"./tracing\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport { AnomalyDetectorContext } from \"./anomalyDetectorContext\";\nimport {\n  AnomalyDetectorOptionalParams,\n  ModelSnapshot,\n  AnomalyDetectorListMultivariateModelNextOptionalParams,\n  AnomalyDetectorListMultivariateModelOptionalParams,\n  DetectRequest,\n  AnomalyDetectorDetectEntireSeriesOptionalParams,\n  AnomalyDetectorDetectEntireSeriesResponse,\n  AnomalyDetectorDetectLastPointOptionalParams,\n  AnomalyDetectorDetectLastPointResponse,\n  DetectChangePointRequest,\n  AnomalyDetectorDetectChangePointOptionalParams,\n  AnomalyDetectorDetectChangePointResponse,\n  ModelInfo,\n  AnomalyDetectorTrainMultivariateModelOptionalParams,\n  AnomalyDetectorTrainMultivariateModelResponse,\n  AnomalyDetectorListMultivariateModelResponse,\n  AnomalyDetectorGetMultivariateModelOptionalParams,\n  AnomalyDetectorGetMultivariateModelResponse,\n  AnomalyDetectorDeleteMultivariateModelOptionalParams,\n  DetectionRequest,\n  AnomalyDetectorDetectAnomalyOptionalParams,\n  AnomalyDetectorDetectAnomalyResponse,\n  AnomalyDetectorGetDetectionResultOptionalParams,\n  AnomalyDetectorGetDetectionResultResponse,\n  AnomalyDetectorExportModelOptionalParams,\n  AnomalyDetectorExportModelResponse,\n  LastDetectionRequest,\n  AnomalyDetectorLastDetectAnomalyOptionalParams,\n  AnomalyDetectorLastDetectAnomalyResponse,\n  AnomalyDetectorListMultivariateModelNextResponse\n} from \"./models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\nexport class AnomalyDetector extends AnomalyDetectorContext {\n  /**\n   * Initializes a new instance of the AnomalyDetector class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   *                 https://westus2.api.cognitive.microsoft.com).\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: AnomalyDetectorOptionalParams) {\n    super(endpoint, options);\n  }\n\n  /**\n   * List models of a subscription\n   * @param options The options parameters.\n   */\n  public listMultivariateModel(\n    options?: AnomalyDetectorListMultivariateModelOptionalParams\n  ): PagedAsyncIterableIterator<ModelSnapshot> {\n    const iter = this.listMultivariateModelPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listMultivariateModelPagingPage(options);\n      }\n    };\n  }\n\n  private async *listMultivariateModelPagingPage(\n    options?: AnomalyDetectorListMultivariateModelOptionalParams\n  ): AsyncIterableIterator<ModelSnapshot[]> {\n    let result = await this._listMultivariateModel(options);\n    yield result.models || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listMultivariateModelNext(\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.models || [];\n    }\n  }\n\n  private async *listMultivariateModelPagingAll(\n    options?: AnomalyDetectorListMultivariateModelOptionalParams\n  ): AsyncIterableIterator<ModelSnapshot> {\n    for await (const page of this.listMultivariateModelPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * This operation generates a model with an entire series, each point is detected with the same model.\n   * With this method, points before and after a certain point are used to determine whether it is an\n   * anomaly. The entire detection can give user an overall status of the time series.\n   * @param body Time series points and period if needed. Advanced model parameters can also be set in\n   *             the request.\n   * @param options The options parameters.\n   */\n  async detectEntireSeries(\n    body: DetectRequest,\n    options?: AnomalyDetectorDetectEntireSeriesOptionalParams\n  ): Promise<AnomalyDetectorDetectEntireSeriesResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-detectEntireSeries\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        detectEntireSeriesOperationSpec\n      );\n      return result as AnomalyDetectorDetectEntireSeriesResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * This operation generates a model using points before the latest one. With this method, only\n   * historical points are used to determine whether the target point is an anomaly. The latest point\n   * detecting operation matches the scenario of real-time monitoring of business metrics.\n   * @param body Time series points and period if needed. Advanced model parameters can also be set in\n   *             the request.\n   * @param options The options parameters.\n   */\n  async detectLastPoint(\n    body: DetectRequest,\n    options?: AnomalyDetectorDetectLastPointOptionalParams\n  ): Promise<AnomalyDetectorDetectLastPointResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-detectLastPoint\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        detectLastPointOperationSpec\n      );\n      return result as AnomalyDetectorDetectLastPointResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Evaluate change point score of every series point\n   * @param body Time series points and granularity is needed. Advanced model parameters can also be set\n   *             in the request if needed.\n   * @param options The options parameters.\n   */\n  async detectChangePoint(\n    body: DetectChangePointRequest,\n    options?: AnomalyDetectorDetectChangePointOptionalParams\n  ): Promise<AnomalyDetectorDetectChangePointResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-detectChangePoint\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        detectChangePointOperationSpec\n      );\n      return result as AnomalyDetectorDetectChangePointResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Create and train a multivariate anomaly detection model. The request must include a source parameter\n   * to indicate an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri).\n   * All time-series used in generate the model must be zipped into one single file. Each time-series\n   * will be in a single CSV file in which the first column is timestamp and the second column is value.\n   * @param body Training request\n   * @param options The options parameters.\n   */\n  async trainMultivariateModel(\n    body: ModelInfo,\n    options?: AnomalyDetectorTrainMultivariateModelOptionalParams\n  ): Promise<AnomalyDetectorTrainMultivariateModelResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-trainMultivariateModel\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        trainMultivariateModelOperationSpec\n      );\n      return result as AnomalyDetectorTrainMultivariateModelResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * List models of a subscription\n   * @param options The options parameters.\n   */\n  private async _listMultivariateModel(\n    options?: AnomalyDetectorListMultivariateModelOptionalParams\n  ): Promise<AnomalyDetectorListMultivariateModelResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-_listMultivariateModel\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        listMultivariateModelOperationSpec\n      );\n      return result as AnomalyDetectorListMultivariateModelResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get detailed information of multivariate model, including the training status and variables used in\n   * the model.\n   * @param modelId Model identifier.\n   * @param options The options parameters.\n   */\n  async getMultivariateModel(\n    modelId: string,\n    options?: AnomalyDetectorGetMultivariateModelOptionalParams\n  ): Promise<AnomalyDetectorGetMultivariateModelResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-getMultivariateModel\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      modelId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        getMultivariateModelOperationSpec\n      );\n      return result as AnomalyDetectorGetMultivariateModelResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Delete an existing multivariate model according to the modelId\n   * @param modelId Model identifier.\n   * @param options The options parameters.\n   */\n  async deleteMultivariateModel(\n    modelId: string,\n    options?: AnomalyDetectorDeleteMultivariateModelOptionalParams\n  ): Promise<coreHttp.RestResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-deleteMultivariateModel\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      modelId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        deleteMultivariateModelOperationSpec\n      );\n      return result as coreHttp.RestResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Submit detection multivariate anomaly task with the trained model of modelId, the input schema\n   * should be the same with the training request. Thus request will be complete asynchronously and will\n   * return a resultId for querying the detection result.The request should be a source link to indicate\n   * an externally accessible Azure storage Uri (preferably a Shared Access Signature Uri). All\n   * time-series used in generate the model must be zipped into one single file. Each time-series will be\n   * as follows: the first column is timestamp and the second column is value.\n   * @param modelId Model identifier.\n   * @param body Detect anomaly request\n   * @param options The options parameters.\n   */\n  async detectAnomaly(\n    modelId: string,\n    body: DetectionRequest,\n    options?: AnomalyDetectorDetectAnomalyOptionalParams\n  ): Promise<AnomalyDetectorDetectAnomalyResponse> {\n    const { span } = createSpan(\"AnomalyDetector-detectAnomaly\", options || {});\n    const operationArguments: coreHttp.OperationArguments = {\n      modelId,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        detectAnomalyOperationSpec\n      );\n      return result as AnomalyDetectorDetectAnomalyResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get multivariate anomaly detection result based on resultId returned by the DetectAnomalyAsync api\n   * @param resultId Result identifier.\n   * @param options The options parameters.\n   */\n  async getDetectionResult(\n    resultId: string,\n    options?: AnomalyDetectorGetDetectionResultOptionalParams\n  ): Promise<AnomalyDetectorGetDetectionResultResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-getDetectionResult\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      resultId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        getDetectionResultOperationSpec\n      );\n      return result as AnomalyDetectorGetDetectionResultResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Export multivariate anomaly detection model based on modelId\n   * @param modelId Model identifier.\n   * @param options The options parameters.\n   */\n  async exportModel(\n    modelId: string,\n    options?: AnomalyDetectorExportModelOptionalParams\n  ): Promise<AnomalyDetectorExportModelResponse> {\n    const { span } = createSpan(\"AnomalyDetector-exportModel\", options || {});\n    const operationArguments: coreHttp.OperationArguments = {\n      modelId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        exportModelOperationSpec\n      );\n      return result as AnomalyDetectorExportModelResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Synchronized API for anomaly detection.\n   * @param modelId Model identifier.\n   * @param body Request for last detection.\n   * @param options The options parameters.\n   */\n  async lastDetectAnomaly(\n    modelId: string,\n    body: LastDetectionRequest,\n    options?: AnomalyDetectorLastDetectAnomalyOptionalParams\n  ): Promise<AnomalyDetectorLastDetectAnomalyResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-lastDetectAnomaly\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      modelId,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        lastDetectAnomalyOperationSpec\n      );\n      return result as AnomalyDetectorLastDetectAnomalyResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ListMultivariateModelNext\n   * @param nextLink The nextLink from the previous successful call to the ListMultivariateModel method.\n   * @param options The options parameters.\n   */\n  private async _listMultivariateModelNext(\n    nextLink: string,\n    options?: AnomalyDetectorListMultivariateModelNextOptionalParams\n  ): Promise<AnomalyDetectorListMultivariateModelNextResponse> {\n    const { span } = createSpan(\n      \"AnomalyDetector-_listMultivariateModelNext\",\n      options || {}\n    );\n    const operationArguments: coreHttp.OperationArguments = {\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    try {\n      const result = await this.sendOperationRequest(\n        operationArguments,\n        listMultivariateModelNextOperationSpec\n      );\n      return result as AnomalyDetectorListMultivariateModelNextResponse;\n    } catch (error) {\n      span.setStatus({\n        code: coreTracing.SpanStatusCode.UNSET,\n        message: error.message\n      });\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst detectEntireSeriesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/timeseries/entire/detect\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DetectEntireResponse\n    },\n    default: {\n      bodyMapper: Mappers.AnomalyDetectorError,\n      headersMapper: Mappers.AnomalyDetectorDetectEntireSeriesExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst detectLastPointOperationSpec: coreHttp.OperationSpec = {\n  path: \"/timeseries/last/detect\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DetectLastPointResponse\n    },\n    default: {\n      bodyMapper: Mappers.AnomalyDetectorError,\n      headersMapper: Mappers.AnomalyDetectorDetectLastPointExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst detectChangePointOperationSpec: coreHttp.OperationSpec = {\n  path: \"/timeseries/changepoint/detect\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DetectChangePointResponse\n    },\n    default: {\n      bodyMapper: Mappers.AnomalyDetectorError,\n      headersMapper: Mappers.AnomalyDetectorDetectChangePointExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst trainMultivariateModelOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AnomalyDetectorTrainMultivariateModelHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper:\n        Mappers.AnomalyDetectorTrainMultivariateModelExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listMultivariateModelOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper:\n        Mappers.AnomalyDetectorListMultivariateModelExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.top],\n  urlParameters: [Parameters.endpoint, Parameters.apiVersion],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMultivariateModelOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models/{modelId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Model\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.AnomalyDetectorGetMultivariateModelExceptionHeaders\n    }\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.modelId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteMultivariateModelOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models/{modelId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper:\n        Mappers.AnomalyDetectorDeleteMultivariateModelExceptionHeaders\n    }\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.modelId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst detectAnomalyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models/{modelId}/detect\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AnomalyDetectorDetectAnomalyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.AnomalyDetectorDetectAnomalyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.modelId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getDetectionResultOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/results/{resultId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DetectionResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.AnomalyDetectorGetDetectionResultExceptionHeaders\n    }\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.resultId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst exportModelOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models/{modelId}/export\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Stream\" }, serializedName: \"parsedResponse\" }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.AnomalyDetectorExportModelExceptionHeaders\n    }\n  },\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.modelId\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst lastDetectAnomalyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/multivariate/models/{modelId}/last/detect\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LastDetectionResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper: Mappers.AnomalyDetectorLastDetectAnomalyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.modelId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listMultivariateModelNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ModelList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse,\n      headersMapper:\n        Mappers.AnomalyDetectorListMultivariateModelNextExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.top],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.apiVersion,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"3.0.0-beta.5\";\n\nexport const DEFAULT_COGNITIVE_SCOPE = \"https://cognitiveservices.azure.com/.default\";\n\nexport const AnomalyDetectorLoggingAllowedHeaderNames = [\n  \"apim-request-id\",\n  \"Location\",\n  \"Operation-Location\",\n  \"Strict-Transport-Security\",\n  \"X-Content-Type-Options\",\n  \"x-envoy-upstream-service-time\",\n  \"Ocp-Apim-Subscription-Key\",\n];\n\nexport const AnomalyDetectorLoggingAllowedQueryParameters = [\n  \"includeTextDetails\",\n  \"includeKeys\",\n  \"op\",\n];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential } from \"@azure/core-auth\";\nimport {\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicyOptionsLike,\n  WebResourceLike,\n} from \"@azure/core-http\";\n\nconst API_KEY_HEADER_NAME = \"Ocp-Apim-Subscription-Key\";\n\n/**\n * Create an HTTP pipeline policy to authenticate a request\n * using an `AzureKeyCredential` for Azure Anomaly Detector\n */\nexport function createAnomalyDetectorAzureKeyCredentialPolicy(\n  credential: KeyCredential\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new AnomalyDetectorAzureKeyCredentialPolicy(nextPolicy, options, credential);\n    },\n  };\n}\n\n/**\n * A concrete implementation of an AzureKeyCredential policy\n * using the appropriate header for Azure Anomaly Detector\n */\nclass AnomalyDetectorAzureKeyCredentialPolicy extends BaseRequestPolicy {\n  private credential: KeyCredential;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptionsLike,\n    credential: KeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.credential = credential;\n  }\n\n  public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n    webResource.headers.set(API_KEY_HEADER_NAME, this.credential.key);\n    return this._nextPolicy.sendRequest(webResource);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"ai-anomaly-detector\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AnomalyDetector } from \"./generated\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  SDK_VERSION,\n  DEFAULT_COGNITIVE_SCOPE,\n  AnomalyDetectorLoggingAllowedHeaderNames,\n  AnomalyDetectorLoggingAllowedQueryParameters,\n} from \"./constants\";\nimport {\n  isTokenCredential,\n  bearerTokenAuthenticationPolicy,\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  PipelineOptions,\n} from \"@azure/core-http\";\nimport { createAnomalyDetectorAzureKeyCredentialPolicy } from \"./azureKeyCredentialPolicy\";\nimport { logger } from \"./logger\";\n\n/**\n * Client class for interacting with Azure Anomaly Detector service.\n */\nexport class AnomalyDetectorClient extends AnomalyDetector {\n  /**\n   * Creates an instance of AnomalyDetectorClient.\n   *\n   * Example usage:\n   * ```ts\n   * import { AnomalyDetectorClient, AzureKeyCredential } from \"@azure/ai-anomaly-detector\";\n   *\n   * const client = new AnomalyDetectorClient(\n   *    \"<service endpoint>\",\n   *    new AzureKeyCredential(\"<api key>\")\n   * );\n   * ```\n   * @param endpointUrl - Url to an Azure Anomaly Detector service endpoint\n   * @param credential - Used to authenticate requests to the service.\n   * @param options - Used to configure the Form Recognizer client.\n   */\n  constructor(\n    endpointUrl: string,\n    credential: TokenCredential | KeyCredential,\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: PipelineOptions\n  ) {\n    const { ...pipelineOptions } = options;\n\n    const libInfo = `azsdk-js-ai-anomalydetector/${SDK_VERSION}`;\n    if (!pipelineOptions.userAgentOptions) {\n      pipelineOptions.userAgentOptions = {};\n    }\n    if (pipelineOptions.userAgentOptions.userAgentPrefix) {\n      pipelineOptions.userAgentOptions.userAgentPrefix = `${pipelineOptions.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      pipelineOptions.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const authPolicy = isTokenCredential(credential)\n      ? bearerTokenAuthenticationPolicy(credential, DEFAULT_COGNITIVE_SCOPE)\n      : createAnomalyDetectorAzureKeyCredentialPolicy(credential);\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...pipelineOptions,\n      ...{\n        loggingOptions: {\n          logger: logger.info,\n          allowedHeaderNames: AnomalyDetectorLoggingAllowedHeaderNames,\n          allowedQueryParameters: AnomalyDetectorLoggingAllowedQueryParameters,\n        },\n      },\n    };\n\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n\n    super(endpointUrl, pipeline);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelineOptions } from \"@azure/core-http\";\n\n/**\n * Client options used to configure Form Recognizer API requests.\n */\nexport interface AnomalyDetectorClientOptions extends PipelineOptions {}\n\nexport enum KnownTimeGranularity {\n  /**\n   * Yearly time granularity\n   */\n  yearly = \"yearly\",\n  /**\n   * Monthly time granularity\n   */\n  monthly = \"monthly\",\n  /**\n   * Weekly time granularity\n   */\n  weekly = \"weekly\",\n  /**\n   * Daily time granularity\n   */\n  daily = \"daily\",\n  /**\n   * Hourly time granularity\n   */\n  hourly = \"hourly\",\n  /**\n   * Per minute time granularity\n   */\n  perMinute = \"minutely\",\n  /**\n   * Per second time granularity\n   */\n  perSecond = \"secondly\",\n  /**\n   * Per microsecond time granularity\n   */\n  perMicrosecond = \"microsecond\",\n  /**\n   * None\n   */\n  none = \"none\",\n}\n\nexport {\n  DetectRequest,\n  DetectChangePointRequest,\n  AnomalyDetectorDetectChangePointResponse,\n  AnomalyDetectorDetectEntireSeriesResponse,\n  AnomalyDetectorDetectLastPointResponse,\n  DetectLastPointResponse,\n  DetectChangePointResponse,\n  DetectEntireResponse,\n  TimeSeriesPoint,\n  AnomalyDetectorTrainMultivariateModelResponse,\n  AnomalyDetectorGetMultivariateModelResponse,\n  AnomalyDetectorDetectAnomalyResponse,\n  DetectionRequest,\n  DetectionResult,\n  DetectionResultSummary,\n  DetectionStatus,\n  AnomalyState,\n  AnomalyValue,\n  AnomalyDetectorGetDetectionResultResponse,\n  AnomalyDetectorExportModelResponse,\n  AnomalyDetectorListMultivariateModelNextOptionalParams,\n  AnomalyDetectorListMultivariateModelOptionalParams,\n  AnomalyDetectorListMultivariateModelResponse,\n  AnomalyDetectorListMultivariateModelNextResponse,\n  Model as AnomalyDetectorClientModel,\n  ModelInfo as AnomalyDetectorClientModelInfo,\n  ModelList as AnomalyDetectorClientModelList,\n  ModelSnapshot as AnomalyDetectorClientModelSnapshot,\n  ModelStatus as AnomalyDetectorClientModelStatus,\n  ModelState as AnomalyDetectorClientModelState,\n  VariableState as AnomalyDetectorClientVariableState,\n  ErrorResponse as AnomalyDetectorClientErrorResponse,\n  AlignPolicy,\n  AlignMode,\n  DiagnosticsInfo,\n  FillNAMethod,\n  AnomalyDetectorDetectAnomalyHeaders,\n  AnomalyDetectorTrainMultivariateModelHeaders,\n  TimeGranularity,\n  AnomalyDetectorExportModelOptionalParams,\n  AnomalyDetectorGetDetectionResultOptionalParams,\n  AnomalyDetectorDetectAnomalyOptionalParams,\n  AnomalyDetectorDeleteMultivariateModelOptionalParams,\n  AnomalyDetectorGetMultivariateModelOptionalParams,\n  AnomalyDetectorTrainMultivariateModelOptionalParams,\n  AnomalyDetectorDetectChangePointOptionalParams,\n  AnomalyDetectorDetectLastPointOptionalParams,\n  AnomalyDetectorDetectEntireSeriesOptionalParams,\n  AnomalyDetectorListMultivariateModelNextExceptionHeaders,\n  AnomalyDetectorLastDetectAnomalyExceptionHeaders,\n  AnomalyDetectorExportModelExceptionHeaders,\n  AnomalyDetectorGetDetectionResultExceptionHeaders,\n  AnomalyDetectorDetectAnomalyExceptionHeaders,\n  AnomalyDetectorDeleteMultivariateModelExceptionHeaders,\n  AnomalyDetectorGetMultivariateModelExceptionHeaders,\n  AnomalyDetectorListMultivariateModelExceptionHeaders,\n  AnomalyDetectorTrainMultivariateModelExceptionHeaders,\n  AnomalyDetectorDetectChangePointExceptionHeaders,\n  AnomalyDetectorDetectLastPointExceptionHeaders,\n  ImputeMode,\n  KnownImputeMode,\n  AnomalyDetectorLastDetectAnomalyResponse,\n  KnownFillNAMethod,\n  AnomalyDetectorDetectEntireSeriesExceptionHeaders,\n  LastDetectionResult,\n  VariableValues,\n  LastDetectionRequest,\n  CorrelationChanges,\n  AnomalyInterpretation,\n  AnomalyDetectorLastDetectAnomalyOptionalParams,\n} from \"./generated/models\";\n"],"names":["createSpanFunction","DetectRequestMapper","DetectChangePointRequestMapper","ModelInfoMapper","DetectionRequestMapper","LastDetectionRequestMapper","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue","__asyncValues","__asyncDelegator","coreHttp.operationOptionsToRequestOptionsBase","coreTracing.SpanStatusCode","coreHttp.Serializer","Mappers.DetectEntireResponse","Mappers.AnomalyDetectorError","Mappers.AnomalyDetectorDetectEntireSeriesExceptionHeaders","Parameters.body","Parameters.endpoint","Parameters.apiVersion","Parameters.contentType","Parameters.accept","Mappers.DetectLastPointResponse","Mappers.AnomalyDetectorDetectLastPointExceptionHeaders","Mappers.DetectChangePointResponse","Mappers.AnomalyDetectorDetectChangePointExceptionHeaders","Parameters.body1","Mappers.AnomalyDetectorTrainMultivariateModelHeaders","Mappers.ErrorResponse","Mappers.AnomalyDetectorTrainMultivariateModelExceptionHeaders","Parameters.body2","Mappers.ModelList","Mappers.AnomalyDetectorListMultivariateModelExceptionHeaders","Parameters.skip","Parameters.top","Mappers.Model","Mappers.AnomalyDetectorGetMultivariateModelExceptionHeaders","Parameters.modelId","Mappers.AnomalyDetectorDeleteMultivariateModelExceptionHeaders","Mappers.AnomalyDetectorDetectAnomalyHeaders","Mappers.AnomalyDetectorDetectAnomalyExceptionHeaders","Parameters.body3","Mappers.DetectionResult","Mappers.AnomalyDetectorGetDetectionResultExceptionHeaders","Parameters.resultId","Mappers.AnomalyDetectorExportModelExceptionHeaders","Parameters.accept1","Mappers.LastDetectionResult","Mappers.AnomalyDetectorLastDetectAnomalyExceptionHeaders","Parameters.body4","Mappers.AnomalyDetectorListMultivariateModelNextExceptionHeaders","Parameters.nextLink","BaseRequestPolicy","createClientLogger","isTokenCredential","bearerTokenAuthenticationPolicy","createPipelineFromOptions","KnownTimeGranularity"],"mappings":"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"}